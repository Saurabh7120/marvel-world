{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/Comics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getUrl } from './getUrl';\nimport { Button, Stack } from 'react-bootstrap';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport ListLayout from './ListLayout';\nimport SearchInput from './SearchInput';\nimport ListItemCard from './ListItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comics = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  let navigate = useNavigate();\n  const {\n    pageNum\n  } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    if (!pageNum) return;\n    setList([]);\n    getComics();\n  }, [pageNum]);\n\n  const getComics = async () => {\n    try {\n      if (isNaN(pageNum)) navigate(`/NotFound`);\n      const url = getUrl('comics', 12, parseInt(pageNum) * 12);\n      const result = await axios.get(url);\n      if (result.data.data.results.length === 0) navigate(`/NotFound`);\n      setTimeout(() => setList(result.data.data.results), 200);\n      let pageCount = Math.ceil(result.data.data.total / 12);\n\n      if (parseInt(pageNum) === pageCount - 1) {\n        setHasMore(false);\n      } else {\n        setHasMore(true);\n      }\n    } catch (error) {\n      navigate(`/NotFound`);\n    }\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        let query = searchParams.get('query');\n        const url = getUrl('comics');\n        const result1 = await axios.get(url + '&title=' + query);\n\n        if (result1.data.data.results.length === 0) {\n          const result2 = await axios.get(url + '&titleStartsWith=' + query);\n          if (result2.data.data.results.length === 0) navigate(`/NotFound`);\n          setList(result2.data.data.results);\n        } else {\n          setList(result1.data.data.results);\n        }\n      } catch (error) {\n        navigate(`/NotFound`);\n      }\n    };\n\n    if (searchParams.get('query')) {\n      search();\n    } else {\n      getComics();\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(ListLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      className: \"mb-2 top-btn-list\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(-1, {\n          replace: true\n        }),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"comics\",\n        handleSearch: value => {\n          if (value.trim().length === 0) {\n            setSearchParams({});\n            return;\n          }\n\n          setSearchParams({\n            query: value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), (searchParams.get('query') === \"\" || !searchParams.get('query')) && list && /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"ms-auto list-btns\",\n        gap: 2,\n        direction: \"horizontal\",\n        children: [pageNum >= 1 && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: list.length === 0,\n          onClick: () => navigate(`/comics/page/${parseInt(pageNum) - 1}`, {\n            replace: true\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 38\n        }, this), hasMore && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: list.length === 0,\n          onClick: () => navigate(`/comics/page/${parseInt(pageNum) + 1}`, {\n            replace: true\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: list && list.length > 0 ? list.map(el => /*#__PURE__*/_jsxDEV(ListItemCard, {\n        image: `${el.thumbnail.path}.${el.thumbnail.extension}`,\n        name: el.title,\n        desc: el.description,\n        navigate: () => navigate(`/comics/${el.id}`, {\n          replace: true\n        })\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)) : [1, 2, 3, 4].map(i => /*#__PURE__*/_jsxDEV(ListItemCard, {\n        isEmpty: true\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comics, \"72pvDENXk0NIw3DWDA2jA/17sKo=\", false, function () {\n  return [useNavigate, useParams, useSearchParams];\n});\n\n_c = Comics;\nexport default Comics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comics\");","map":{"version":3,"sources":["/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/Comics.js"],"names":["React","useEffect","useState","axios","getUrl","Button","Stack","useNavigate","useParams","useSearchParams","ListLayout","SearchInput","ListItemCard","Comics","list","setList","hasMore","setHasMore","navigate","pageNum","searchParams","setSearchParams","getComics","isNaN","url","parseInt","result","get","data","results","length","setTimeout","pageCount","Math","ceil","total","error","search","query","result1","result2","replace","value","trim","map","el","thumbnail","path","extension","title","description","id","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getUrl } from './getUrl';\nimport { Button,  Stack} from 'react-bootstrap'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport ListLayout from './ListLayout';\nimport SearchInput from './SearchInput';\nimport ListItemCard from './ListItemCard';\n\nconst Comics = () => {\n\n    const [list, setList] = useState([]);\n\n    const [hasMore, setHasMore] = useState(true);\n\n    let navigate = useNavigate();\n\n    const {pageNum} = useParams();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        if(!pageNum) return\n        setList([]);\n        getComics();\n    },[pageNum])\n    \n    const getComics = async() => {\n        try {\n            if(isNaN(pageNum)) navigate(`/NotFound`) \n            const url = getUrl('comics',12,parseInt(pageNum) * 12);\n            const result = await axios.get(url)\n            if(result.data.data.results.length === 0) navigate(`/NotFound`) \n            setTimeout(() => setList(result.data.data.results), 200) \n            let pageCount = Math.ceil(result.data.data.total/12);\n            if(parseInt(pageNum) === pageCount - 1) {\n                setHasMore(false)\n            }else{\n                setHasMore(true)\n            }\n        } catch (error) {\n            navigate(`/NotFound`) \n        }\n    }\n\n    useEffect(() => {\n        const search = async() => {\n            try {\n                let query = searchParams.get('query')\n                const url = getUrl('comics');\n                const result1 = await axios.get(url + '&title=' + query);\n                if(result1.data.data.results.length === 0) {\n                    const result2 = await axios.get(url + '&titleStartsWith=' + query);\n                    if(result2.data.data.results.length === 0) navigate(`/NotFound`)\n                    setList(result2.data.data.results)\n                }else{\n                    setList(result1.data.data.results)\n                }\n            } catch (error) {\n                navigate(`/NotFound`)\n            }\n        }\n        if(searchParams.get('query')){ \n            search()\n        }else{\n            getComics();\n        }\n       },[searchParams])\n\n    return (\n        <ListLayout>\n            <Stack direction='horizontal' className='mb-2 top-btn-list' >\n                <Button   onClick={() => navigate(-1, {replace:true})}>Go Back</Button>\n                <SearchInput placeholder='comics' handleSearch={value => {\n                     if(value.trim().length === 0) {\n                        setSearchParams({});\n                        return\n                    } \n                    setSearchParams({query:value})\n                }\n                    }/>\n                {(searchParams.get('query') === \"\" ||!searchParams.get('query')) && list  && <Stack className='ms-auto list-btns' gap={2} direction='horizontal'>\n                    {pageNum >= 1 && <Button disabled={list.length === 0} onClick={() => navigate(`/comics/page/${parseInt(pageNum) - 1}`, {replace:true})}>Prev</Button>}\n                    {hasMore && <Button disabled={list.length === 0} onClick={() => navigate(`/comics/page/${parseInt(pageNum) + 1}`, {replace:true})}>Next</Button>}\n                </Stack>}\n            </Stack>\n            <div className='list'>\n                {list && list.length > 0 ? list.map((el) => \n                    <ListItemCard key={el.id} image={`${el.thumbnail.path}.${el.thumbnail.extension}`} name={el.title} desc={el.description} navigate={() => navigate(`/comics/${el.id}`, {replace:true})}/>\n                    )\n                    :\n                    [1,2,3,4].map(i => \n                        <ListItemCard key={i} isEmpty={true} />\n                    )\n                }\n            </div>\n        </ListLayout>\n\n    );\n};\n\nexport default Comics;"]},"metadata":{},"sourceType":"module"}