{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getUrl } from './getUrl';\nimport { Button, Stack } from 'react-bootstrap';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport ListLayout from './ListLayout';\nimport SearchInput from './SearchInput';\nimport ListItemCard from './ListItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const [list, setList] = useState();\n  const [hasMore, setHasMore] = useState(true);\n  let navigate = useNavigate();\n  const {\n    pageNum\n  } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams(); // console.log(searchParams);\n\n  useEffect(() => {\n    if (!pageNum) return;\n    setList([]);\n    getCharacters();\n  }, [pageNum]);\n\n  const getCharacters = async () => {\n    try {\n      if (isNaN(pageNum)) navigate(`/NotFound`);\n      const url = getUrl('characters', 12, parseInt(pageNum) * 12);\n      const result = await axios.get(url);\n      if (result.data.data.results.length === 0) navigate(`/NotFound`, {\n        replace: true\n      });\n      setTimeout(() => setList(result.data.data.results), 200);\n      let pageCount = Math.ceil(result.data.data.total / 12);\n\n      if (parseInt(pageNum) === pageCount - 1) {\n        setHasMore(false);\n      } else {\n        setHasMore(true);\n      }\n    } catch (error) {\n      navigate(`/NotFound`, {\n        replace: true\n      });\n    }\n  };\n\n  useEffect(() => {\n    try {\n      const search = async () => {\n        let query = searchParams.get('query');\n        const url = getUrl('characters');\n        const result1 = await axios.get(url + '&name=' + query);\n\n        if (result1.data.data.results.length === 0) {\n          const result2 = await axios.get(url + '&nameStartsWith=' + query);\n          if (result2.data.data.results.length === 0) navigate(`/NotFound`, {\n            replace: true\n          });\n          setList(result2.data.data.results);\n        } else {\n          setList(result1.data.data.results);\n        }\n      };\n\n      if (searchParams.get('query')) {\n        search();\n      } else {\n        getCharacters();\n      }\n    } catch (error) {\n      navigate(`/NotFound`);\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(ListLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      className: \"mb-2 top-btn-list\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(-1, {\n          replace: true\n        }),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"characters\",\n        handleSearch: value => {\n          if (value.trim().length === 0) {\n            setSearchParams({});\n            return;\n          }\n\n          setSearchParams({\n            query: value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), (searchParams.get('query') === \"\" || !searchParams.get('query')) && list && /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"ms-auto list-btns\",\n        gap: 2,\n        direction: \"horizontal\",\n        children: [pageNum >= 1 && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: list.length === 0,\n          onClick: () => navigate(`/characters/page/${parseInt(pageNum) - 1}`, {\n            replace: true\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 38\n        }, this), hasMore && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: list.length === 0,\n          onClick: () => navigate(`/characters/page/${parseInt(pageNum) + 1}`, {\n            replace: true\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: list && list.length > 0 ? list.map(el => /*#__PURE__*/_jsxDEV(ListItemCard, {\n        image: `${el.thumbnail.path}.${el.thumbnail.extension}`,\n        name: el.name,\n        desc: el.description,\n        navigate: () => navigate(`/characters/${el.id}`, {\n          replace: true\n        })\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)) : [1, 2, 3, 4].map(i => /*#__PURE__*/_jsxDEV(ListItemCard, {\n        isEmpty: true\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Characters, \"ni2FaPHwHwJMBZLu3h8QppP3KjI=\", false, function () {\n  return [useNavigate, useParams, useSearchParams];\n});\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/Characters.js"],"names":["React","useEffect","useState","axios","getUrl","Button","Stack","useNavigate","useParams","useSearchParams","ListLayout","SearchInput","ListItemCard","Characters","list","setList","hasMore","setHasMore","navigate","pageNum","searchParams","setSearchParams","getCharacters","isNaN","url","parseInt","result","get","data","results","length","replace","setTimeout","pageCount","Math","ceil","total","error","search","query","result1","result2","value","trim","map","el","thumbnail","path","extension","name","description","id","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getUrl } from './getUrl';\nimport { Button, Stack} from 'react-bootstrap'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport ListLayout from './ListLayout';\nimport SearchInput from './SearchInput';\nimport ListItemCard from './ListItemCard';\n\nconst Characters = () => {\n\n    const [list, setList] = useState();\n    const [hasMore, setHasMore] = useState(true);\n\n    let navigate = useNavigate();\n\n    const {pageNum} = useParams();\n\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    // console.log(searchParams);\n\n\n    useEffect(() => {\n        if(!pageNum) return\n        setList([]);\n        getCharacters();\n    },[pageNum])\n\n    const getCharacters = async() => {\n        try {\n            if(isNaN(pageNum)) navigate(`/NotFound`) \n            const url = getUrl('characters',12,parseInt(pageNum) * 12);\n            const result = await axios.get(url)\n            if(result.data.data.results.length === 0) navigate(`/NotFound`, {replace:true})\n            setTimeout(() => setList(result.data.data.results), 200) \n            let pageCount = Math.ceil(result.data.data.total/12);\n            if(parseInt(pageNum) === pageCount - 1) {\n                setHasMore(false)\n            }else{\n                setHasMore(true)\n            }\n        } catch (error) {\n            navigate(`/NotFound`, {replace:true})\n        }\n\n    }\n\n   useEffect(() => {\n    try {\n        const search = async() => {\n            let query = searchParams.get('query')\n            const url = getUrl('characters');\n            const result1 = await axios.get(url + '&name=' + query);\n            if(result1.data.data.results.length === 0) {\n                const result2 = await axios.get(url + '&nameStartsWith=' + query);\n                if(result2.data.data.results.length === 0) navigate(`/NotFound`, {replace:true})\n                setList(result2.data.data.results)\n            }else{\n                setList(result1.data.data.results)\n            }\n            \n        }\n        if(searchParams.get('query')){ \n            search()\n        }else{\n            getCharacters();\n        }\n    } catch (error) {\n        navigate(`/NotFound`)\n    }\n\n   },[searchParams])\n    \n\n    return (\n        <ListLayout>\n            <Stack direction='horizontal' className='mb-2 top-btn-list' >\n                <Button   onClick={() => navigate(-1, {replace:true})}>Go Back</Button>\n                <SearchInput placeholder='characters' handleSearch={value =>\n                { \n                    if(value.trim().length === 0) {\n                        setSearchParams({});\n                        return\n                    } \n                    setSearchParams({query:value});\n                }}/>\n                {(searchParams.get('query') === \"\" ||!searchParams.get('query')) && list  && <Stack className='ms-auto list-btns' gap={2} direction='horizontal'>\n                    {pageNum >= 1 && <Button disabled={list.length === 0}  onClick={() => navigate(`/characters/page/${parseInt(pageNum) - 1}`, {replace:true})}>Prev</Button>}\n                    {hasMore && <Button disabled={list.length === 0} onClick={() => navigate(`/characters/page/${parseInt(pageNum) + 1}`, {replace:true})} >Next</Button>}\n                </Stack>}\n            </Stack>\n            <div className='list'>\n                {list && list.length > 0 ? list.map((el) => \n                <ListItemCard key={el.id} image={`${el.thumbnail.path}.${el.thumbnail.extension}`} name={el.name} desc={el.description} navigate={() => navigate(`/characters/${el.id}`, {replace:true})}/>\n                )\n                :\n                [1,2,3,4].map(i => \n                    <ListItemCard key={i} isEmpty={true} />\n                )\n                }\n            </div> \n        </ListLayout>\n\n    );\n};\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}