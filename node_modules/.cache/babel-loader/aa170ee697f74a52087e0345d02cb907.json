{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/CharacterDetails.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, Container, Image, ListGroup, Stack } from 'react-bootstrap';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { getUrl } from './getUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharacterDetails = () => {\n  _s();\n\n  const [details, setDetails] = useState();\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const url = getUrl(`characters/${params.id}`);\n        const result = await axios.get(url);\n\n        if (result.data.data.results.length === 0) {\n          navigate('/NotFound');\n          return;\n        }\n\n        setDetails(result.data.data.results[0]);\n      } catch (error) {\n        navigate('/NotFound');\n      }\n    };\n\n    getDetails();\n  }, [params]);\n  return details ? /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mx-auto detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      className: \"mb-4 top-btn-list\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(-1, {\n          replace: true\n        }),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      className: \"mx-4 p-3 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        alt: \"thumbnail-image\",\n        src: `${details.thumbnail.path}.${details.thumbnail.extension}`,\n        className: \"detail-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 2,\n        className: \"detail-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-3\",\n          children: details.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: details.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), details.comics.items.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: details.comics.items.map((i, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            action: true,\n            onClick: () => navigate(`/comics/${i.resourceURI.split('/')[6]}`),\n            children: i.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 66\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 60\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"secondary\",\n          className: \"alert-normal\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No related comics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), details.series.items.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: details.series.items.map((i, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            action: true,\n            onClick: () => navigate(`/series/${i.resourceURI.split('/')[6]}`),\n            children: i.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 66\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 60\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"secondary\",\n          className: \"alert-normal\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No related series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 8\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CharacterDetails, \"WZMn9t1VhpvsX0445/higupp+X0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CharacterDetails;\nexport default CharacterDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterDetails\");","map":{"version":3,"sources":["/Users/saurabhmane/Developer/College dev/CS554/Lab4/src/CharacterDetails.js"],"names":["axios","React","useEffect","useState","Alert","Button","Container","Image","ListGroup","Stack","Link","useNavigate","useParams","getUrl","CharacterDetails","details","setDetails","params","navigate","getDetails","url","id","result","get","data","results","length","error","replace","thumbnail","path","extension","name","description","comics","items","map","i","idx","resourceURI","split","series"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, Container, Image, ListGroup, Stack } from 'react-bootstrap';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { getUrl } from './getUrl';\n\nconst CharacterDetails = () => {\n    const [details, setDetails] = useState()\n    const params = useParams();\n    const navigate = useNavigate();\n    useEffect(() => {\n        const getDetails = async() => {\n            try {\n                const url = getUrl(`characters/${params.id}`)\n                const result = await axios.get(url)\n                if(result.data.data.results.length === 0) {\n                    navigate('/NotFound');\n                    return;\n                }\n                setDetails(result.data.data.results[0])\n            } catch (error) {\n                navigate('/NotFound');\n            }\n\n        }\n        getDetails()\n    },[params])\n    return (\n       details ? \n       <Container className='mx-auto detail-container'>\n           <Stack direction='horizontal' className='mb-4 top-btn-list' >\n                <Button   onClick={() => navigate(-1, {replace:true})}>Go Back</Button>\n            </Stack>\n            <Stack direction='horizontal' className='mx-4 p-3 border rounded'>\n                <Image alt='thumbnail-image' src={`${details.thumbnail.path}.${details.thumbnail.extension}`} className='detail-image'/>\n                    <Stack gap={2} className='detail-layout'>\n                        <h1 className='mb-3'>{details.name}</h1>\n                        <h2>Description</h2>\n                        <p>{details.description}</p>\n                        <h2>Comics</h2>\n                        {details.comics.items.length > 0 ? <ListGroup>\n                            {details.comics.items.map((i,idx) => <ListGroup.Item action onClick={() => navigate(`/comics/${i.resourceURI.split('/')[6]}`)} key={idx}>{i.name}</ListGroup.Item>)}\n                        </ListGroup> :\n                        <Alert variant='secondary' className='alert-normal'>\n                            <p>No related comics</p>\n                        </Alert>\n                        }\n                        <h2>Series</h2>\n                        {details.series.items.length > 0 ? <ListGroup>\n                            {details.series.items.map((i,idx) => <ListGroup.Item action onClick={() => navigate(`/series/${i.resourceURI.split('/')[6]}`)} key={idx}>{i.name}</ListGroup.Item>)}\n                        </ListGroup> :\n                        <Alert variant='secondary' className='alert-normal'>\n                            <p>No related series</p>\n                        </Alert>\n                        }\n                    </Stack>\n\n            </Stack>\n       </Container>\n:\n       <></>\n    );\n};\n\nexport default CharacterDetails;"]},"metadata":{},"sourceType":"module"}